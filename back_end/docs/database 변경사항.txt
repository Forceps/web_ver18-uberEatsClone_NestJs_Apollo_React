CREATE SCHEMA nuber_eats;

CREATE TABLE nuber_eats.restaurant (
  restaurant_id int unsigned NOT NULL AUTO_INCREMENT,
  name varchar(45) NOT NULL,
  isVegan tinyint NOT NULL,
  address varchar(45) NOT NULL,
  ownerName varchar(45) NOT NULL,
  categoryName varchar(45) NOT NULL,
  PRIMARY KEY (restaurant_id)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

ALTER TABLE nuber_eats.restaurant 
CHANGE COLUMN isVegan isVegan TINYINT NULL ;

CREATE TABLE `nuber_eats`.`user` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT,
  `createdAt` datetime DEFAULT NULL,
  `updatedAt` datetime DEFAULT NULL,
  `email` varchar(80) NOT NULL,
  `password` varchar(70) NOT NULL,
  `role` enum('client','owner','delivery') NOT NULL DEFAULT 'client',
  PRIMARY KEY (`id`),
  UNIQUE KEY `email_UNIQUE` (`email`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

ALTER TABLE `nuber_eats`.`user` 
ADD COLUMN `verified` TINYINT UNSIGNED NOT NULL DEFAULT 0 AFTER `email`;

CREATE TABLE `nuber_eats`.`verification` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `createdAt` DATETIME NULL,
  `updatedAt` DATETIME NULL,
  `code` VARCHAR(45) NOT NULL,
  `userId` BIGINT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `userId_UNIQUE` (`userId` ASC) VISIBLE,
  CONSTRAINT `userId_to_verification`
    FOREIGN KEY (`userId`)
    REFERENCES `nuber_eats`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);
ALTER TABLE `nuber_eats`.`verification` 
CHANGE COLUMN `code` `code` VARCHAR(25) NOT NULL ;

ALTER TABLE `nuber_eats`.`restaurant` 
CHANGE COLUMN `ownerName` `createdAt` DATETIME NULL AFTER `restaurant_id`,
CHANGE COLUMN `categoryName` `updatedAt` DATETIME NULL AFTER `createdAt`,
CHANGE COLUMN `isVegan` `coverImg` MEDIUMTEXT NULL DEFAULT NULL ;
ALTER TABLE `nuber_eats`.`restaurant` 
CHANGE COLUMN `restaurant_id` `restaurant_id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT ;
CREATE TABLE `nuber_eats`.`category` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `createdAt` DATETIME NULL,
  `updatedAt` DATETIME NULL,
  `name` VARCHAR(45) NOT NULL,
  `coverImg` MEDIUMTEXT NULL,
  PRIMARY KEY (`id`));
  ALTER TABLE `nuber_eats`.`restaurant` 
ADD COLUMN `category` INT UNSIGNED NULL AFTER `address`,
ADD INDEX `RestaurantCategory_idx` (`category` ASC) VISIBLE;
;
ALTER TABLE `nuber_eats`.`restaurant` 
ADD CONSTRAINT `RestaurantCategory`
  FOREIGN KEY (`category`)
  REFERENCES `nuber_eats`.`category` (`id`)
  ON DELETE SET NULL
  ON UPDATE CASCADE;
ALTER TABLE `nuber_eats`.`restaurant` 
ADD COLUMN `owner` BIGINT UNSIGNED NOT NULL AFTER `category`,
ADD INDEX `RestaurantOwner_idx` (`owner` ASC) VISIBLE;
;
ALTER TABLE `nuber_eats`.`restaurant` 
ADD CONSTRAINT `RestaurantOwner`
  FOREIGN KEY (`owner`)
  REFERENCES `nuber_eats`.`user` (`id`)
  ON DELETE CASCADE
  ON UPDATE CASCADE;
ALTER TABLE `nuber_eats`.`restaurant` 
CHANGE COLUMN `restaurant_id` `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT ;
ALTER TABLE `nuber_eats`.`category` 
ADD COLUMN `slug` VARCHAR(45) NOT NULL AFTER `coverImg`,
ADD UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
ADD UNIQUE INDEX `slug_UNIQUE` (`slug` ASC) VISIBLE;
;

CREATE TABLE `nuber_eats`.`dish` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `price` INT UNSIGNED NOT NULL,
  `photo` MEDIUMTEXT NULL,
  `description` VARCHAR(140) NOT NULL,
  PRIMARY KEY (`id`));

ALTER TABLE `nuber_eats`.`dish` 
ADD COLUMN `restaurant` BIGINT UNSIGNED NOT NULL AFTER `description`,
ADD INDEX `menu_idx` (`restaurant` ASC) VISIBLE;
;
ALTER TABLE `nuber_eats`.`dish` 
ADD CONSTRAINT `menu`
  FOREIGN KEY (`restaurant`)
  REFERENCES `nuber_eats`.`restaurant` (`id`)
  ON DELETE CASCADE
  ON UPDATE CASCADE;

  ALTER TABLE `nuber_eats`.`dish` 
ADD COLUMN `options` JSON NULL AFTER `restaurant`;
ALTER TABLE `nuber_eats`.`dish` 
ADD COLUMN `createdAt` DATETIME NULL AFTER `id`,
ADD COLUMN `updatedAt` DATETIME NULL AFTER `createdAt`;

CREATE TABLE `nuber_eats`.`order` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `createdAt` DATETIME NULL,
  `updatedAt` DATETIME NULL,
  `customer` BIGINT UNSIGNED NULL,
  `driver` BIGINT UNSIGNED NULL,
  `restaurant` BIGINT UNSIGNED NULL,
  `total` FLOAT UNSIGNED NOT NULL,
  `role` ENUM("pending", "cooking", "pickedUp", "delivered") NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `customer_idx` (`customer` ASC) VISIBLE,
  INDEX `driver_idx` (`driver` ASC) VISIBLE,
  INDEX `targetRestaurant_idx` (`restaurant` ASC) VISIBLE,
  CONSTRAINT `customer`
    FOREIGN KEY (`customer`)
    REFERENCES `nuber_eats`.`user` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `driver`
    FOREIGN KEY (`driver`)
    REFERENCES `nuber_eats`.`user` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `targetRestaurant`
    FOREIGN KEY (`restaurant`)
    REFERENCES `nuber_eats`.`restaurant` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE);
CREATE TABLE `nuber_eats`.`m2m_dish_order` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `dish` BIGINT UNSIGNED NULL,
  `order` BIGINT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `M2M_order_idx` (`order` ASC) VISIBLE,
  CONSTRAINT `m2m_order`
    FOREIGN KEY (`order`)
    REFERENCES `nuber_eats`.`order` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
ALTER TABLE `nuber_eats`.`m2m_dish_order` 
ADD INDEX `m2m_dish_idx` (`dish` ASC) VISIBLE;
;
ALTER TABLE `nuber_eats`.`m2m_dish_order` 
ADD CONSTRAINT `m2m_dish`
  FOREIGN KEY (`dish`)
  REFERENCES `nuber_eats`.`dish` (`id`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;
  ALTER TABLE `nuber_eats`.`m2m_dish_order` 
DROP FOREIGN KEY `m2m_dish`,
DROP FOREIGN KEY `m2m_order`;
ALTER TABLE `nuber_eats`.`m2m_dish_order` 
ADD CONSTRAINT `m2m_dish`
  FOREIGN KEY (`dish`)
  REFERENCES `nuber_eats`.`dish` (`id`)
  ON DELETE SET NULL
  ON UPDATE CASCADE,
ADD CONSTRAINT `m2m_order`
  FOREIGN KEY (`order`)
  REFERENCES `nuber_eats`.`order` (`id`)
  ON DELETE CASCADE
  ON UPDATE CASCADE;

CREATE TABLE `nuber_eats`.`order-item` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `dish` BIGINT UNSIGNED NULL,
  `options` JSON NULL,
  PRIMARY KEY (`id`),
  INDEX `dishKinds_idx` (`dish` ASC) VISIBLE,
  CONSTRAINT `dishKinds`
    FOREIGN KEY (`dish`)
    REFERENCES `nuber_eats`.`dish` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE);

ALTER TABLE `nuber_eats`.`m2m_dish_order` 
RENAME TO  `nuber_eats`.`m2m_order-item_order` ;
ALTER TABLE `nuber_eats`.`m2m_order-item_order` 
DROP FOREIGN KEY `m2m_dish`;
ALTER TABLE `nuber_eats`.`m2m_order-item_order` 
CHANGE COLUMN `dish` `order-item` BIGINT UNSIGNED NULL DEFAULT NULL ;
ALTER TABLE `nuber_eats`.`m2m_order-item_order` 
ADD CONSTRAINT `m2m_dish`
  FOREIGN KEY (`order-item`)
  REFERENCES `nuber_eats`.`dish` (`id`)
  ON DELETE SET NULL
  ON UPDATE CASCADE;
ALTER TABLE `nuber_eats`.`m2m_order-item_order` 
ADD CONSTRAINT `m2m_order-item`
  FOREIGN KEY (`order-item`)
  REFERENCES `nuber_eats`.`order-item` (`id`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;
  ALTER TABLE `nuber_eats`.`m2m_order-item_order` 
DROP FOREIGN KEY `m2m_order-item`;
ALTER TABLE `nuber_eats`.`m2m_order-item_order` 
ADD CONSTRAINT `m2m_order-item`
  FOREIGN KEY (`order-item`)
  REFERENCES `nuber_eats`.`order-item` (`id`)
  ON DELETE SET NULL
  ON UPDATE CASCADE;
ALTER TABLE `nuber_eats`.`order` 
CHANGE COLUMN `role` `status` ENUM('pending', 'cooking', 'pickedUp', 'delivered') NOT NULL ;
ALTER TABLE `nuber_eats`.`order` 
CHANGE COLUMN `status` `status` ENUM('pending', 'cooking', 'pickedUp', 'delivered') NOT NULL DEFAULT 'pending' ;
ALTER TABLE `nuber_eats`.`order` 
CHANGE COLUMN `total` `total` FLOAT UNSIGNED NOT NULL DEFAULT 0 ;
ALTER TABLE `nuber_eats`.`dish` 
CHANGE COLUMN `price` `price` INT UNSIGNED NOT NULL DEFAULT 0 ;
ALTER TABLE `nuber_eats`.`order` 
CHANGE COLUMN `status` `status` ENUM('pending', 'cooking', 'cooked', 'pickedUp', 'delivered') NOT NULL DEFAULT 'pending' ;











// 2020 - 12 - 11

CREATE TABLE `nuber_eats`.`payment` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `createdAt` DATETIME NULL,
  `updatedAt` DATETIME NULL,
  `transactionId` BIGINT UNSIGNED NOT NULL,
  `userId` BIGINT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `buyer_idx` (`userId` ASC) VISIBLE,
  CONSTRAINT `buyer`
    FOREIGN KEY (`userId`)
    REFERENCES `nuber_eats`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);
ALTER TABLE `nuber_eats`.`payment` 
ADD COLUMN `restaurantId` BIGINT UNSIGNED NOT NULL AFTER `userId`,
ADD INDEX `restaurantOne_idx` (`restaurantId` ASC) VISIBLE;
;
ALTER TABLE `nuber_eats`.`payment` 
ADD CONSTRAINT `restaurantOne`
  FOREIGN KEY (`restaurantId`)
  REFERENCES `nuber_eats`.`restaurant` (`id`)
  ON DELETE CASCADE
  ON UPDATE CASCADE;

